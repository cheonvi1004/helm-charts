apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloud-controller-manager
  name: {{ template "sakura-cloud-controller-manager.name" . }}
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: cloud-controller-manager
    spec:
      dnsPolicy: Default
      hostNetwork: true
      serviceAccountName: {{ template "sakura-cloud-controller-manager.name" . }}
      containers:
      - name: {{ template "sakura-cloud-controller-manager.name" . }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        resources:
{{ toYaml .Values.resources | indent 12 }}
        command:
        - /usr/local/bin/sakura-cloud-controller-manager
        - --cloud-provider=sakuracloud
        - --leader-elect=true
        - --use-service-account-credentials=false
        - --allocate-node-cidrs=false
        - --configure-cloud-routes=false
        env:
        - name: SAKURACLOUD_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "sakura-cloud-controller-manager.fullname" . }}
              key: access-token
        - name: SAKURACLOUD_ACCESS_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "sakura-cloud-controller-manager.fullname" . }}
              key: access-token-secret
        - name: SAKURACLOUD_ZONE
          value: {{ required "A value is required for sacloud.zone" .Values.sacloud.zone | quote }}
        - name: SAKURACLOUD_CLUSTER_ID
          value: {{ .Values.sacloud.clusterID | quote }}
      tolerations:
{{ toYaml .Values.daemonset.tolerations | indent 8 }}
      nodeSelector:
{{ toYaml .Values.daemonset.nodeSelector | indent 8 }}
